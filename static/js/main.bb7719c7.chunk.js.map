{"version":3,"sources":["logo.svg","components/Dropdown.jsx","App.js","reportWebVitals.js","index.js"],"names":["data","name","subQuestion","subOptions","answer","Dropdown","useState","DD1","setDD1","DD2","setDD2","onChange","e","target","value","defaultValue","disabled","map","item","index","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KAAe,I,mBCETA,EAAO,CACX,CACEC,KAAM,4BACNC,YAAa,iBACbC,WAAY,CACV,CAAEF,KAAM,0BAA2BG,OAAQ,UAC3C,CAAEH,KAAM,gCAAiCG,OAAQ,QACjD,CAAEH,KAAM,iCAAkCG,OAAQ,WAClD,CACEH,KAAM,iEACNG,OAAQ,YAId,CACEH,KAAM,eACNC,YAAa,oBACbC,WAAY,CACV,CAAEF,KAAM,0BAA2BG,OAAQ,UAC3C,CAAEH,KAAM,gCAAiCG,OAAQ,OACjD,CAAEH,KAAM,iCAAkCG,OAAQ,SAClD,CACEH,KAAM,iEACNG,OAAQ,WAId,CACEH,KAAM,kBACNC,YAAa,wBACbC,WAAY,CACV,CACEF,KAAM,sDACNG,OAAQ,WAEV,CACEH,KAAM,kEACNG,OAAQ,OAEV,CAAEH,KAAM,8BAA+BG,OAAQ,cA+DtCC,MAzDf,WACE,MAAsBC,mBAAS,MAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAsBF,mBAAS,MAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KAQA,OACE,oEACoC,IAClC,yBACEC,SAAU,SAACC,GACTJ,EAAOI,EAAEC,OAAOC,OAChBJ,EAAO,OAETK,aAAc,MACdD,MAAgB,OAARP,EAAgB,MAAMP,EAAKO,GANrC,UAQE,wBAAQS,UAAQ,EAAhB,iBACChB,EAAKiB,KAAI,SAACC,EAAMC,GAAP,OACR,wBAAQL,MAAOK,EAAf,SACGD,EAAKjB,MADmBkB,SAK/B,uBACA,uBACS,OAARZ,GACC,gCACGP,EAAKO,GAAKL,YAAa,IACxB,yBACES,SAAU,SAACC,GACTF,EAAOE,EAAEC,OAAOC,QAElBC,aAAc,MACdD,MAAgB,OAARL,EAAgB,MAAMT,EAAKS,GALrC,UAOE,wBAAQO,UAAQ,EAAhB,iBACChB,EAAKO,GAAKJ,WAAWc,KAAI,SAACC,EAAMC,GAAP,OACxB,wBAAQL,MAAOK,EAAf,SACGD,EAAKjB,MADmBkB,YAOnC,uBACS,OAARZ,GAAwB,OAARE,GACf,yCAAYT,EAAKO,GAAKJ,WAAWM,GAAKL,cCnF/BgB,MAVf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,gDACA,uBACA,cAAC,EAAD,QCESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.bb7719c7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from \"react\";\r\n\r\nconst data = [\r\n  {\r\n    name: \"add items or other arrays\",\r\n    subQuestion: \"I need to add:\",\r\n    subOptions: [\r\n      { name: \"element/s from an array\", answer: \"splice\" },\r\n      { name: \"the last element of the array\", answer: \"push\" },\r\n      { name: \"the first element of the array\", answer: \"unshift\" },\r\n      {\r\n        name: \"one or more elements in order for use, leaving the array as is\",\r\n        answer: \"concat\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: \"remove items\",\r\n    subQuestion: \"I need to remove:\",\r\n    subOptions: [\r\n      { name: \"element/s from an array\", answer: \"splice\" },\r\n      { name: \"the last element of the array\", answer: \"pop\" },\r\n      { name: \"the first element of the array\", answer: \"shift\" },\r\n      {\r\n        name: \"one or more elements in order for use, leaving the array as is\",\r\n        answer: \"slice\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: \"walk over items\",\r\n    subQuestion: \"I need to iterate by:\",\r\n    subOptions: [\r\n      {\r\n        name: \"executing a function I will create for each element\",\r\n        answer: \"forEach\",\r\n      },\r\n      {\r\n        name: \"creating a new array from each element with a function I create\",\r\n        answer: \"map\",\r\n      },\r\n      { name: \"creating an iterator object\", answer: \"entries\" },\r\n    ],\r\n  },\r\n];\r\n\r\n\r\nfunction Dropdown() {\r\n  const [DD1, setDD1] = useState(null);\r\n  const [DD2, setDD2] = useState(null);\r\n\r\n  // function isThreeDots(x) {\r\n  //   if (x === \"...\") {\r\n  //     return true;\r\n  //   } else return false;\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      I have an array, I would like to:{\" \"}\r\n      <select\r\n        onChange={(e) => {\r\n          setDD1(e.target.value);\r\n          setDD2(null);\r\n        }}\r\n        defaultValue={\"...\"}\r\n        value={(DD1 === null) ? \"...\":data[DD1]}\r\n      >\r\n        <option disabled>...</option>\r\n        {data.map((item, index) => (\r\n          <option value={index} key={index}>\r\n            {item.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <br />\r\n      <br />\r\n      {DD1 !== null && (\r\n        <div>\r\n          {data[DD1].subQuestion}{\" \"}\r\n          <select\r\n            onChange={(e) => {\r\n              setDD2(e.target.value);\r\n            }}\r\n            defaultValue={\"...\"}\r\n            value={(DD2 === null) ? \"...\":data[DD2]}\r\n          >\r\n            <option disabled>...</option>\r\n            {data[DD1].subOptions.map((item, index) => (\r\n              <option value={index} key={index}>\r\n                {item.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      )}\r\n      <br />\r\n      {DD1 !== null && DD2 !== null && (\r\n        <span>Ans: {data[DD1].subOptions[DD2].answer}</span>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dropdown;\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Dropdown from './components/Dropdown.jsx';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Array Explorer</h1>\r\n      <br />\r\n      <Dropdown />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}